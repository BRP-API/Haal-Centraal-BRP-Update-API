/* 
 * BRP Update API
 *
 * Met deze API kun je opvragen welke door jou gevolgde personen zijn gewijzigd in de BRP. Je kunt je abonneren op een persoon die je wilt volgen, en je kunt opvragen welke personen door jou worden gevolgd. Je kunt deze API gebruiken in combinatie met de BRP bevragen API, bijvoorbeeld om lokale kopiegegevens actueel te houden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Threading;
using RestSharp;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBeherenVolgindicatiesApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon
        /// </summary>
        /// <remarks>
        /// Vraag een volgindicatie op van een specifieke persoon. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <returns>VolgindicatieRaadplegen</returns>
        VolgindicatieRaadplegen GetVolgindicatie (Object burgerservicenummer);

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon
        /// </summary>
        /// <remarks>
        /// Vraag een volgindicatie op van een specifieke persoon. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <returns>ApiResponse of VolgindicatieRaadplegen</returns>
        ApiResponse<VolgindicatieRaadplegen> GetVolgindicatieWithHttpInfo (Object burgerservicenummer);
        /// <summary>
        /// Raadpleeg actieve volgindicaties
        /// </summary>
        /// <remarks>
        /// Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>VolgindicatieCollectie</returns>
        VolgindicatieCollectie GetVolgindicaties ();

        /// <summary>
        /// Raadpleeg actieve volgindicaties
        /// </summary>
        /// <remarks>
        /// Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of VolgindicatieCollectie</returns>
        ApiResponse<VolgindicatieCollectie> GetVolgindicatiesWithHttpInfo ();
        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie
        /// </summary>
        /// <remarks>
        /// Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <returns>VolgindicatieRaadplegen</returns>
        VolgindicatieRaadplegen UpsertVolgindicatie (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie));

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie
        /// </summary>
        /// <remarks>
        /// Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <returns>ApiResponse of VolgindicatieRaadplegen</returns>
        ApiResponse<VolgindicatieRaadplegen> UpsertVolgindicatieWithHttpInfo (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon
        /// </summary>
        /// <remarks>
        /// Vraag een volgindicatie op van een specifieke persoon. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieRaadplegen</returns>
        System.Threading.Tasks.Task<VolgindicatieRaadplegen> GetVolgindicatieAsync (Object burgerservicenummer, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon
        /// </summary>
        /// <remarks>
        /// Vraag een volgindicatie op van een specifieke persoon. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieRaadplegen)</returns>
        System.Threading.Tasks.Task<ApiResponse<VolgindicatieRaadplegen>> GetVolgindicatieWithHttpInfoAsync (Object burgerservicenummer, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Raadpleeg actieve volgindicaties
        /// </summary>
        /// <remarks>
        /// Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieCollectie</returns>
        System.Threading.Tasks.Task<VolgindicatieCollectie> GetVolgindicatiesAsync (CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Raadpleeg actieve volgindicaties
        /// </summary>
        /// <remarks>
        /// Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VolgindicatieCollectie>> GetVolgindicatiesWithHttpInfoAsync (CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie
        /// </summary>
        /// <remarks>
        /// Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieRaadplegen</returns>
        System.Threading.Tasks.Task<VolgindicatieRaadplegen> UpsertVolgindicatieAsync (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie
        /// </summary>
        /// <remarks>
        /// Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieRaadplegen)</returns>
        System.Threading.Tasks.Task<ApiResponse<VolgindicatieRaadplegen>> UpsertVolgindicatieWithHttpInfoAsync (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie), CancellationToken cancellationToken = default(CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BeherenVolgindicatiesApi : IBeherenVolgindicatiesApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BeherenVolgindicatiesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BeherenVolgindicatiesApi(String basePath)
        {
            this.Configuration = new Org.OpenAPITools.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BeherenVolgindicatiesApi"/> class
        /// </summary>
        /// <returns></returns>
        public BeherenVolgindicatiesApi()
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.Default;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BeherenVolgindicatiesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BeherenVolgindicatiesApi(Org.OpenAPITools.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Org.OpenAPITools.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon Vraag een volgindicatie op van een specifieke persoon. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <returns>VolgindicatieRaadplegen</returns>
        public VolgindicatieRaadplegen GetVolgindicatie (Object burgerservicenummer)
        {
             ApiResponse<VolgindicatieRaadplegen> localVarResponse = GetVolgindicatieWithHttpInfo(burgerservicenummer);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon Vraag een volgindicatie op van een specifieke persoon. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <returns>ApiResponse of VolgindicatieRaadplegen</returns>
        public ApiResponse<VolgindicatieRaadplegen> GetVolgindicatieWithHttpInfo (Object burgerservicenummer)
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BeherenVolgindicatiesApi->GetVolgindicatie");

            var localVarPath = "/volgindicaties/{burgerservicenummer}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetVolgindicatie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieRaadplegen>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieRaadplegen) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieRaadplegen)));
        }

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon Vraag een volgindicatie op van een specifieke persoon. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieRaadplegen</returns>
        public async System.Threading.Tasks.Task<VolgindicatieRaadplegen> GetVolgindicatieAsync (Object burgerservicenummer, CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<VolgindicatieRaadplegen> localVarResponse = await GetVolgindicatieWithHttpInfoAsync(burgerservicenummer, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Raadpleeg een volgindicatie op een persoon Vraag een volgindicatie op van een specifieke persoon. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieRaadplegen)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<VolgindicatieRaadplegen>> GetVolgindicatieWithHttpInfoAsync (Object burgerservicenummer, CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BeherenVolgindicatiesApi->GetVolgindicatie");

            var localVarPath = "/volgindicaties/{burgerservicenummer}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetVolgindicatie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieRaadplegen>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieRaadplegen) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieRaadplegen)));
        }

        /// <summary>
        /// Raadpleeg actieve volgindicaties Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>VolgindicatieCollectie</returns>
        public VolgindicatieCollectie GetVolgindicaties ()
        {
             ApiResponse<VolgindicatieCollectie> localVarResponse = GetVolgindicatiesWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// Raadpleeg actieve volgindicaties Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of VolgindicatieCollectie</returns>
        public ApiResponse<VolgindicatieCollectie> GetVolgindicatiesWithHttpInfo ()
        {

            var localVarPath = "/volgindicaties";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);



            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetVolgindicaties", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieCollectie)));
        }

        /// <summary>
        /// Raadpleeg actieve volgindicaties Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieCollectie</returns>
        public async System.Threading.Tasks.Task<VolgindicatieCollectie> GetVolgindicatiesAsync (CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<VolgindicatieCollectie> localVarResponse = await GetVolgindicatiesWithHttpInfoAsync(cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Raadpleeg actieve volgindicaties Vraag de actieve volgindicaties op van een abonnee. Levert geen volgindicaties met einddatum vandaag of in het verleden. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<VolgindicatieCollectie>> GetVolgindicatiesWithHttpInfoAsync (CancellationToken cancellationToken = default(CancellationToken))
        {

            var localVarPath = "/volgindicaties";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);



            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetVolgindicaties", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieCollectie)));
        }

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <returns>VolgindicatieRaadplegen</returns>
        public VolgindicatieRaadplegen UpsertVolgindicatie (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie))
        {
             ApiResponse<VolgindicatieRaadplegen> localVarResponse = UpsertVolgindicatieWithHttpInfo(burgerservicenummer, volgindicatie);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <returns>ApiResponse of VolgindicatieRaadplegen</returns>
        public ApiResponse<VolgindicatieRaadplegen> UpsertVolgindicatieWithHttpInfo (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BeherenVolgindicatiesApi->UpsertVolgindicatie");

            var localVarPath = "/volgindicaties/{burgerservicenummer}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (volgindicatie != null && volgindicatie.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(volgindicatie); // http body (model) parameter
            }
            else
            {
                localVarPostBody = volgindicatie; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpsertVolgindicatie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieRaadplegen>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieRaadplegen) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieRaadplegen)));
        }

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VolgindicatieRaadplegen</returns>
        public async System.Threading.Tasks.Task<VolgindicatieRaadplegen> UpsertVolgindicatieAsync (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<VolgindicatieRaadplegen> localVarResponse = await UpsertVolgindicatieWithHttpInfoAsync(burgerservicenummer, volgindicatie, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Plaats, wijzig of beëindig een volgindicatie Plaats, wijzig of beëindig een volgindicatie op een specifieke persoon. Als je de persoon nog niet volgt, wordt een volgindicatie geplaatst. Als je de persoon al wel volgt, wordt de volgindicatie gewijzigd. Verwijder de einddatum van een volgindicatie door in de request body een leeg object { } te sturen. Beëindig een volgindicatie door een einddatum gelijk aan de datum van vandaag te sturen. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Identificerend gegeven van een ingeschreven natuurlijk persoon, als bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.</param>
        /// <param name="volgindicatie"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VolgindicatieRaadplegen)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<VolgindicatieRaadplegen>> UpsertVolgindicatieWithHttpInfoAsync (Object burgerservicenummer, Volgindicatie volgindicatie = default(Volgindicatie), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BeherenVolgindicatiesApi->UpsertVolgindicatie");

            var localVarPath = "/volgindicaties/{burgerservicenummer}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (volgindicatie != null && volgindicatie.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(volgindicatie); // http body (model) parameter
            }
            else
            {
                localVarPostBody = volgindicatie; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpsertVolgindicatie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VolgindicatieRaadplegen>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VolgindicatieRaadplegen) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VolgindicatieRaadplegen)));
        }

    }
}
